name: CI/CD
on:
push:
branches : [ main ]
jobs:
build:
runs-on : ubuntu-latest
strategy :
matrix:
node-version : [19.x]
steps:
- name: Checkout repository
uses: actions/checkout@v3
- name: Set up Node.js ${{ matrix.node-version }}
uses: actions/setup-node@v3
env:
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD : 'true'
with:
node-version : ${{ matrix.node-version }}
- name: Install dependencies
run: npm install
- name: Login to Docker Hub
uses: docker/login-action@v2
with:
username : ${{ secrets.DOCKER_HUB_USERNAME }}
password : ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
- name: Set up Docker Buildx
id: buildx
uses: docker/setup-buildx-action@v2
- name: Build and push
id: docker_build
uses: docker/build-push-action@v4
with:
context : ./
file: ./Dockerfile
push: true
tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mvc-structure:latest
- name: Image digest
run: echo ${{ steps.docker_build.outputs.digest }}


Christoph Pickett
  7:37 PM
--- version of cicd.yml if you have a folder that is at the root level that contains your package.json.
and your cicd.yml is not looking into that folder to find your package.json
---------------------------------------------------------
name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set working directory to socket_app
        run: echo "Working in socket_app directory"

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./socket_module_10_app
        run: npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./socket_app
          file: ./socket_app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/socket-app:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}